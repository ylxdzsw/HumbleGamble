"use strict";const $=e=>document.querySelector(e),sleep=e=>new Promise(t=>setTimeout(t,1e3*e)),download=e=>{const t=URL.createObjectURL(new Blob([e],{type:"application/json"})),n=document.createElement("a");n.download="data.json",n.href=t,n.click()},okget=e=>new Promise((t,n)=>{const o=new XMLHttpRequest;o.open("GET","/api/v1"+e),o.onreadystatechange=(()=>{o.readyState==XMLHttpRequest.DONE&&(200==o.status?t:n)(o.responseText)}),o.send()}),wait_time_out=(e,t=2)=>new Promise((n,o)=>{setTimeout(()=>{o(new Error("promise time out"))},1e3*t);e.then(n).catch(o)}),wait_until=async e=>{for(;!e();)await sleep(.02)},on_index_update=e=>{console.log(new Date),console.log(e)},fuck=async e=>new Promise((t,n)=>{chrome.runtime.sendMessage(e,t)}),dispatch=async()=>{"https://www.okex.com/future/futureFullNew.do?symbol=0"==location.href&&init_fullscreen()};setTimeout(dispatch,0);const ready=()=>null!=$("#priceIndex .indexNumber > em"),observe_index=e=>{const t=$("#priceIndex .indexNumber > em");new MutationObserver(()=>e(parseFloat(t.textContent.replace(",","")))).observe(t,{childList:!0})},init_fullscreen=async()=>{await wait_until(ready),observe_index(on_index_update)};
//# sourceMappingURL=okex.js.map